if(!_flutter)var _flutter={};_flutter.loader=null,function(){"use strict";const a=u(d());function d(){const r=document.querySelector("base");return r&&r.getAttribute("href")||""}function u(r){return r==""||r.endsWith("/")?r:`${r}/`}async function l(r,e,t){if(e<0)return r;let i;const n=new Promise((o,s)=>{i=setTimeout(()=>{s(new Error(`${t} took more than ${e}ms to resolve. Moving on.`,{cause:l}))},e)});return Promise.race([r,n]).finally(()=>{clearTimeout(i)})}class p{constructor(e,t="flutter-js"){const i=e||[/\.js$/];window.trustedTypes&&(this.policy=trustedTypes.createPolicy(t,{createScriptURL:function(n){const o=new URL(n,window.location),s=o.pathname.split("/").pop();if(i.some(h=>h.test(s)))return o.toString();console.error("URL rejected by TrustedTypes policy",t,":",n,"(download prevented)")}}))}}class y{setTrustedTypesPolicy(e){this._ttPolicy=e}loadServiceWorker(e){if(e==null)return console.debug("Null serviceWorker configuration. Skipping."),Promise.resolve();if(!("serviceWorker"in navigator)){let c="Service Worker API unavailable.";return window.isSecureContext||(c+=`
The current context is NOT secure.`,c+=`
Read more: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts`),Promise.reject(new Error(c))}const{serviceWorkerVersion:t,serviceWorkerUrl:i=`${a}flutter_service_worker.js?v=${t}`,timeoutMillis:n=4e3}=e;let o=i;this._ttPolicy!=null&&(o=this._ttPolicy.createScriptURL(o));const s=navigator.serviceWorker.register(o).then(c=>this._getNewServiceWorker(c,t)).then(this._waitForServiceWorkerActivation);return l(s,n,"prepareServiceWorker")}async _getNewServiceWorker(e,t){if(!e.active&&(e.installing||e.waiting))return console.debug("Installing/Activating first service worker."),e.installing||e.waiting;if(e.active.scriptURL.endsWith(t))return console.debug("Loading from existing service worker."),e.active;{const i=await e.update();return console.debug("Updating service worker."),i.installing||i.waiting||i.active}}async _waitForServiceWorkerActivation(e){if(!e||e.state=="activated")if(e){console.debug("Service worker already active.");return}else throw new Error("Cannot activate a null service worker!");return new Promise((t,i)=>{e.addEventListener("statechange",()=>{e.state=="activated"&&(console.debug("Activated new service worker."),t())})})}}class g{constructor(){this._scriptLoaded=!1}setTrustedTypesPolicy(e){this._ttPolicy=e}async loadEntrypoint(e){const{entrypointUrl:t=`${a}main.dart.js`,onEntrypointLoaded:i}=e||{};return this._loadEntrypoint(t,i)}didCreateEngineInitializer(e){typeof this._didCreateEngineInitializerResolve=="function"&&(this._didCreateEngineInitializerResolve(e),this._didCreateEngineInitializerResolve=null,delete _flutter.loader.didCreateEngineInitializer),typeof this._onEntrypointLoaded=="function"&&this._onEntrypointLoaded(e)}_loadEntrypoint(e,t){const i=typeof t=="function";if(!this._scriptLoaded){this._scriptLoaded=!0;const n=this._createScriptTag(e);if(i)console.debug("Injecting <script> tag. Using callback."),this._onEntrypointLoaded=t,document.body.append(n);else return new Promise((o,s)=>{console.debug("Injecting <script> tag. Using Promises. Use the callback approach instead!"),this._didCreateEngineInitializerResolve=o,n.addEventListener("error",s),document.body.append(n)})}}_createScriptTag(e){const t=document.createElement("script");t.type="application/javascript";let i=e;return this._ttPolicy!=null&&(i=this._ttPolicy.createScriptURL(e)),t.src=i,t}}class v{async loadEntrypoint(e){const{serviceWorker:t,...i}=e||{},n=new p,o=new y;o.setTrustedTypesPolicy(n.policy),await o.loadServiceWorker(t).catch(c=>{console.warn("Exception while loading service worker:",c)});const s=new g;return s.setTrustedTypesPolicy(n.policy),this.didCreateEngineInitializer=s.didCreateEngineInitializer.bind(s),s.loadEntrypoint(i)}}_flutter.loader=new v}();
